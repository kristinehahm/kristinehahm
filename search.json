[
  {
    "objectID": "posts/assignments/index.html",
    "href": "posts/assignments/index.html",
    "title": "Assignment 1",
    "section": "",
    "text": "Generative art is a way of expert coding and creatively expressing through parameters and with technological systems to make distinctive arts.\nSample 1. Growing Space\nFigure 1 is “Growing Space” by Lionel Radisson.\n\nSource: https://www.ledger.com/academy/generative-art-the-artists-defining-the-space\nSample 2. Platonic Solids\nFigure 2 is “Platonic Solids” by Michael Hansmeyer.\n\nSource: https://aiartists.org/generative-art-design"
  },
  {
    "objectID": "posts/assignments/index.html#fall-leaf-color-change",
    "href": "posts/assignments/index.html#fall-leaf-color-change",
    "title": "Assignment 1",
    "section": "2. Fall Leaf Color Change",
    "text": "2. Fall Leaf Color Change\nUsed “lawngreen” instead of “burlywood3”.\n\n\nCode\n# Install packages\n\n# install.packages(\"gsubfn\")\n# install.packages(\"tidyverse\")\nlibrary(gsubfn)\nlibrary(tidyverse)\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %>% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %>% rbind(points)->points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %>%\n      rbind(status) -> status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n  \n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]->points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %>%\n      rbind(points) -> points\n    status[-1,]->status\n  }\n}\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"lawngreen\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes\n\n\n\n\n\nFigure 1: lawngreen"
  },
  {
    "objectID": "posts/assignments/index.html#critique-on-a-chart",
    "href": "posts/assignments/index.html#critique-on-a-chart",
    "title": "Assignment 1",
    "section": "3. Critique on a chart",
    "text": "3. Critique on a chart\nThis charts shows the platforms as percentage of total origin of memes over time. “Know Your Meme” used data from 2011 to 2022. It seems that Twitter has been the most rapidly growing platform for memes.\nHowever, due to similar colors they used for different platforms, it was hard to distinguish one platform to another. Also, they could have deleted .00% on the left and shorten it. By doing so, the chart could have been more efficient.\nIt was interesting to see TikTok’s percentage grow rapidly from 2019 when Covid-19 started.\n\nSource: https://flowingdata.com/wp-content/uploads/2022/08/where-the-memes-came-from-1536x846.png"
  },
  {
    "objectID": "assign04.html",
    "href": "assign04.html",
    "title": "Assignment 4",
    "section": "",
    "text": "Code\nmy_data <- read.csv(\"~/Desktop/D.V. Rstudio/kristinehahm/Sampling Example.csv\")\n\nN <- my_data\nVoting <- my_data$Likeliness.you.will.vote\nGenre <- my_data$Music.Taste\nAge <- my_data$Age\nParty <- my_data$Political.Party...Liberal..0..Conservative..1.\n\np1<- ggplot(N,\n       aes(x=`Voting`,\n           ))+\n  geom_bar(position='dodge', fill = \"lavender\", colour = \"lightgrey\") +\n  scale_colour_brewer(palette = \"PiYG\") +\n  theme_bw() +\n  labs(x = \"On a Scale of 1-to-5 How Likely Are You to Vote?\",\n       y = \"count\",\n       title = \"Likeliness of Voting\",\n       caption = Sys.Date())\np1\n\n\n\n\n\nCode\n#2\n\np2<- ggplot(N,\n            aes(x=`Genre`,\n            ))+\n  geom_bar(position='dodge', fill = \"mistyrose\") +\n  scale_colour_brewer(palette = \"PiYG\") +\n  theme_bw() +\n  labs(x = \"Preferred Genre?\",\n       y = \"count\",\n       title = \"Genre\",\n       caption = Sys.Date())\n\np3<- ggplot(N,\n            aes(x=`Age`,\n            ))+\n  geom_bar(position='dodge', fill = \"slategray1\") +\n  scale_colour_brewer(palette = \"PiYG\") +\n  theme_bw() +\n  labs(x = \"How old are you?\",\n       y = \"count\",\n       title = \"Age\",\n       caption = Sys.Date())\n\n\n\nggdraw() +\n  draw_plot(p2, x = 0, y = .5, width = .5, height = .5) +\n  draw_plot(p3, x = .5, y = .5, width = .5, height = .5) +\n  draw_plot(p1, x = 0, y = 0, width = 1, height = 0.5) +\n  draw_plot_label(label = c(\"A\", \"B\", \"C\"), size = 8,\n                  x = c(0, 0.5, 0), y = c(1, 1, 0.5))"
  },
  {
    "objectID": "assign03.html",
    "href": "assign03.html",
    "title": "Assignment 3",
    "section": "",
    "text": "Code\n## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\n\n\n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\n\n# Create four model objects\nlm1 <- lm(y1 ~ x1, data=anscombe)\n#summary(lm1)\nlm2 <- lm(y2 ~ x2, data=anscombe)\n#summary(lm2)\nlm3 <- lm(y3 ~ x3, data=anscombe)\n#summary(lm3)\nlm4 <- lm(y4 ~ x4, data=anscombe)\n#summary(lm4)\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\n\n\nCode\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\n\n\nCode\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\n\n\nCode\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n\n\nCode\n## Fancy version (per help file)\n\nff <- y ~ x\nmods <- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] <- as.name(paste0(\"y\", i))\n  ##      ff[[3]] <- as.name(paste0(\"x\", i))\n  mods[[i]] <- lmi <- lm(ff, data = anscombe)\n  #print(anova(lmi))\n}\n\n#sapply(mods, coef)  # Note the use of this function\n#lapply(mods, function(fm) coef(summary(fm)))\n\n# Preparing for the plots\nop <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\nCode\npar(op)"
  },
  {
    "objectID": "assign02.html#paul-marrells-r-graphics-hpi",
    "href": "assign02.html#paul-marrells-r-graphics-hpi",
    "title": "Assignment 2",
    "section": "2. Paul Marrell’s R Graphics (HPI)",
    "text": "2. Paul Marrell’s R Graphics (HPI)\n\n\nCode\nrm(list=ls())                          \n# Clear environment\n\n\n\nhpi_df <- read.csv(\"/Users/jungmioh/Desktop/D.V. Rstudio/kristinehahm/HPI.csv\", header = TRUE)\n\n\ncolnames(hpi_df)<-c(\"hpi_rank\",\"country\",\"iso\",\"year\",\n                    \"continent\", \"population\", \"life_expectancy\",\n                    \"ladder_of_life\", \"ecological_footprint\",\n                    \"hpi\", \"biocapacity_for_year\", \"gdp\")\n\nhpi2_df <- na.omit(hpi_df)\n\n## Start plotting from basics \n#  plotting functions.\nyear <- c(2013, 2014, 2015, 2016, 2017, 2018, 2019)\nhpi_score <- aggregate(hpi ~ year, hpi2_df, mean)\nlife_score  <- aggregate(life_expectancy ~ year, hpi2_df, mean)\nhpi_score <- c(hpi_score$hpi)\nlife_score <- c(life_score$life_expectancy)\n\n# Setting the parameter (3 rows by 2 cols)\n#par(mfrow=c(3, 2))\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.6) \nplot.new()\nplot.window(range(year), c(40, 80))\nlines(year, hpi_score)\nlines(year, life_score)\npoints(year, hpi_score, pch=17, bg = \"mediumpurple2\", cex=.85) # Try different cex value?  \npoints(year, life_score, pch=21, bg =\"greenyellow\", cex=.85)  # Different background color\npar(col=\"lightcoral\", fg=\"lightcoral\", col.axis=\"lightcoral\")\naxis(1, at=seq(2012, 2020, 2)) # What is the first number standing for?\naxis(2, at=seq(30, 80, 10))\naxis(4, at=seq(30, 80, 10))\nbox(bty=\"u\")\nmtext(\"year\", side=1, line=2, cex=0.7)\nmtext(\"HPI\", side=2, line=2, las=0, cex=0.7)\nmtext(\"Life Exp\", side=4, line=2, las=0, cex=0.7)\ntext(4, 5, \"Bird 131\")\n\n\n\n\n\nCode\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"pink4\", fg=\"pink4\", col.axis=\"pink4\")\n\n\n######## Histogram ########\n\n# Make sure no Y exceed [-3.5, 3.5]\npar(mar=c(2.5, 3.0, 3.5, 0))\nhist(hpi2_df$hpi, breaks=seq(floor(min(hpi2_df$hpi)),\n                             ceiling(max(hpi2_df$hpi))), \n     main=\"Height histogram\", xlab=\"HPI\", \n     col=\"lightpink1\", freq=FALSE)\n\n\n\n\n\nCode\n#par(mar=c(4.5, 5.0, 5.5, 2.1))\n\n\n####### Barplot ######\n\n\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n\nCode\n#summary(hpi2_df$gdp)\n\nhpi3_df <- hpi2_df %>%\n  mutate(gdp_lev = ifelse(hpi2_df$gdp >= 31202, 'High',\n                           ifelse(hpi2_df$gdp >= 4985, 'Middle',\n                                 'Low')))\n\n#summary(hpi2_df$hpi)\n\nhpi3_df <- hpi3_df %>%\n  mutate(hpi_lev = ifelse(hpi2_df$hpi > 49, 'High',\n                          ifelse(hpi2_df$hpi > 39, 'Middle',\n                                 'Low')))\n\n#gdp_sub_h <- subset(hpi3_df, gdp_lev == \"High\")\n#aggregate(gdp_lev ~ hpi_lev, gdp_sub_h, length)\n\n\n#gdp_sub_m <- subset(hpi3_df, gdp_lev == \"Middle\")\n#aggregate(gdp_lev ~ hpi_lev, gdp_sub_m, length)\n\n#gdp_sub_l <- subset(hpi3_df, gdp_lev == \"Low\")\n#aggregate(gdp_lev ~ hpi_lev, gdp_sub_l, length)\n\nhpi_le <- c(\"Middle\", \"Low\", \"High\")\nhigh <- c(122, 50, 75)\nmiddle <- c(223, 96, 175)\nlow <- c(85, 134, 28)\n\nbar_df <- data.frame(high, middle, low)\nrownames(bar_df)=hpi_le\n\npar(mar=c(2, 3.1, 2, 2.1))\nmidpts <- barplot(as.matrix(bar_df), names = rep(\"\", 3),\n                  col = c(\"lightsteelblue1\", \"lavender\", \"lavenderblush\"), border = \"lavenderblush4\")\nlegend(\"topright\", inset=.02,\n       c(\"Middle\",\"Low\", \"High\"), fill = c(\"lightsteelblue1\", \"lavender\", \"lavenderblush\"), \n       horiz=FALSE, cex=0.7)\nmtext(\"GDP per capita\", side=3, line=0.0, cex=0.7)\nmtext(sub(\" \", \"\\n\", colnames(bar_df)),\n      at=midpts, side=1, line=0.5, cex=0.7)\n\n\n\n\n\nCode\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n\n###### Boxplot ######\npar(mar=c(2, 4, 1, 0.5))\nboxplot(hpi3_df$hpi ~ hpi3_df$gdp_lev, data = hpi3_df,\n        boxwex = 0.4, at = 1:3 - 0.2,\n        subset= hpi3_df$hpi_lev == \"High\", col=\"lightsteelblue2\",\n        xlab=\"\",\n        ylab=\"HPI\", ylim=c(20,70))\nmtext(\"GDP per capita\", side=1, line=1.8, cex=0.5)\n\nboxplot(hpi3_df$hpi ~ hpi3_df$gdp_lev, data = hpi3_df, add = TRUE,\n        boxwex = 0.4, at = 1:3 + 0.2,\n        subset= hpi3_df$hpi_lev == \"Low\", col=\"lightyellow3\")\nlegend(\"bottomleft\", inset=.02,\n       c(\"High\",\"Low\"), fill = c(\"lightsteelblue2\", \"lightyellow3\"), horiz=TRUE, cex=0.5)\n\n\n\n\n\nCode\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.6)\npie.sales <- c(0.11, 0.06, 0.23, 0.11, 0.12, 0.37)\nnames(pie.sales) <- c(\"Africa\", \"Asia\",\n                      \"Europe\", \"Oceania\", \"Others\", \"S.America\")\npie(pie.sales, col = cm.colors(6))"
  },
  {
    "objectID": "assign02.html#prepare-for-class-4---review-on-video-by-dr.-edward-tufte",
    "href": "assign02.html#prepare-for-class-4---review-on-video-by-dr.-edward-tufte",
    "title": "Assignment 2",
    "section": "3. Prepare for Class 4 - Review on video by Dr. Edward Tufte",
    "text": "3. Prepare for Class 4 - Review on video by Dr. Edward Tufte\nMeasles Cases Graphic - The graph for measles cases in the US from 1930 to 2010 was fascinating, and from 1963 when they started to vaccinate children, cases started to go down dramatically. This graph was a good way to show this drastic change so that people who see this will grasp what the data is talking about at one glance. Also, this would be a great example of how to show time series data. It was a splendid method to display the effectiveness of the vaccine.\nSwiss Mountain Map - In regards to the Swiss mountain map, a large amount of information was intensely displayed on one map using 3D technologies. Usually, 3D maps make people nauseous or uncomfortable, but this map was very gentle on the 3 dimensions, making the map very viewer friendly.\nGoogle Flu Chart - This chart was based on Google search data when people search for words related to flu. Using this big data the authors wanted to forecast the flu rates ahead of time. However, this method was overfitting random errors along with the data, which led to the failure of the prediction. This chart warns researchers to be cautious of the data they are using and to consider the characteristics of the data and their research method."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kristine Hahm",
    "section": "",
    "text": "This is Kristine Hahm’s Website.\nData Visualization assignments are posted here.\n\npar(family = \"sans\")\nplot(iris, pch=20, cex=.75, col=\"steelblue\")"
  },
  {
    "objectID": "assign01.html",
    "href": "assign01.html",
    "title": "Assignment 1",
    "section": "",
    "text": "Generative art is a way of expert coding and creatively expressing through parameters and with technological systems to make distinctive arts.\nSample 1. Growing Space\nFigure 1 is “Growing Space” by Lionel Radisson.\n\nSource: https://www.ledger.com/academy/generative-art-the-artists-defining-the-space\nSample 2. Platonic Solids\nFigure 2 is “Platonic Solids” by Michael Hansmeyer.\n\nSource: https://aiartists.org/generative-art-design"
  },
  {
    "objectID": "assign01.html#fall-leaf-color-change",
    "href": "assign01.html#fall-leaf-color-change",
    "title": "Assignment 1",
    "section": "2. Fall Leaf Color Change",
    "text": "2. Fall Leaf Color Change\nUsed “lawngreen” instead of “burlywood3”.\n\n\nCode\n# Install packages\n\n# install.packages(\"gsubfn\")\n# install.packages(\"tidyverse\")\nlibrary(gsubfn)\nlibrary(tidyverse)\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %>% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %>% rbind(points)->points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %>%\n      rbind(status) -> status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n  \n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]->points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %>%\n      rbind(points) -> points\n    status[-1,]->status\n  }\n}\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"lawngreen\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes\n\n\n\n\n\nFigure 1: lawngreen"
  },
  {
    "objectID": "assign01.html#critique-on-a-chart",
    "href": "assign01.html#critique-on-a-chart",
    "title": "Assignment 1",
    "section": "3. Critique on a chart",
    "text": "3. Critique on a chart\nThis charts shows the platforms as percentage of total origin of memes over time. “Know Your Meme” used data from 2011 to 2022. It seems that Twitter has been the most rapidly growing platform for memes.\nHowever, due to similar colors they used for different platforms, it was hard to distinguish one platform to another. Also, they could have deleted .00% on the left and shorten it. By doing so, the chart could have been more efficient.\nIt was interesting to see TikTok’s percentage grow rapidly from 2019 when Covid-19 started.\n\nSource: https://flowingdata.com/wp-content/uploads/2022/08/where-the-memes-came-from-1536x846.png"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I am a doctoral student studying public policy in University of Texas at Dallas."
  }
]